apiVersion: v1
kind: Service
metadata:
  name: kafka-zookeeper
  labels:
    app: kafka-zookeeper
spec:
  selector:
    app: kafka-zookeeper
  ports:
    - port: 2181
      name: client
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-zookeeper
spec:
  selector:
    matchLabels:
      app: kafka-zookeeper
  serviceName: kafka-zookeeper
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: kafka-zookeeper
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                      - kafka-zookeeper
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: kafka-zookeeper
          imagePullPolicy: Always
          stdin: true
          image: "hishailesh77/kafka-zookeeper"
          resources:
            requests:
              memory: "8Gi"
              cpu: "4"
          ports:
            - containerPort: 2181
              name: client
            - containerPort: 2888
              name: server
            - containerPort: 3888
              name: leader-election
          command: ["/bin/sh","-c"]
          args: ["/home/kafka_zookeeper_setup.sh"]
          terminationMessagePath: "/tmp/my-log"
          volumeMounts:
            - name: datadir
              mountPath: /home/kafka
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
  volumeClaimTemplates:
    - metadata:
        name: datadir
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 40Gi



